<Window x:Class="brainfuck_gui.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
        xmlns:l="http://schemas.livet-mvvm.net/2011/wpf"
        xmlns:v="clr-namespace:brainfuck_gui.Views"
        xmlns:vm="clr-namespace:brainfuck_gui.ViewModels"
        Title="MainWindow" Height="350" Width="525">

    <Window.DataContext>
        <vm:MainWindowViewModel/>
    </Window.DataContext>

    <i:Interaction.Triggers>

        <!--Viewに特別な要件が存在しない限りは、トリガーやアクションの自作にこだわらず積極的にコードビハインドを使いましょう -->
        <!--Viewのコードビハインドは、基本的にView内で完結するロジックとViewModelからのイベントの受信(専用リスナを使用する)に限るとトラブルが少なくなります -->
        <!--Livet1.1からはコードビハインドでViewModelのイベントを受信するためのWeakEventLisnterサポートが追加されています -->

        <!--WindowのContentRenderedイベントのタイミングでViewModelのInitializeメソッドが呼ばれます-->
        <i:EventTrigger EventName="ContentRendered">
            <l:LivetCallMethodAction MethodTarget="{Binding}" MethodName="Initialize"/>
        </i:EventTrigger>

        <!--Windowが閉じたタイミングでViewModelのDisposeメソッドが呼ばれます-->
        <i:EventTrigger EventName="Closed">
            <l:DataContextDisposeAction/>
        </i:EventTrigger>

        <!--WindowのCloseキャンセル処理に対応する場合は、WindowCloseCancelBehaviorの使用を検討してください-->

    </i:Interaction.Triggers>

    <Grid>
        <TextBox HorizontalAlignment="Left" Height="83" Margin="10,10,0,0" TextWrapping="Wrap" Text="{Binding FuckCode,Mode=TwoWay}" VerticalAlignment="Top" Width="497" VerticalScrollBarVisibility="Auto"/>
        <TextBox HorizontalAlignment="Left" Margin="10,127,0,81" TextWrapping="Wrap" Text="{Binding RunnableCode}" Width="497" VerticalScrollBarVisibility="Auto"/>
        <TextBox HorizontalAlignment="Left" Height="66" Margin="10,0,0,10" TextWrapping="Wrap" Text="{Binding Result}" VerticalAlignment="Bottom" Width="497" VerticalScrollBarVisibility="Auto"/>
        <Button Content="Execute" Command="{Binding ExecuteCommand}" HorizontalAlignment="Left" Margin="10,98,0,0" VerticalAlignment="Top" Width="497"/>

    </Grid>
</Window>
